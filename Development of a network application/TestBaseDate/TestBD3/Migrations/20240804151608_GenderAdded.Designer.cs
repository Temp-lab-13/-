// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestBD3.Model;

#nullable disable

namespace TestBD3.Migrations
{
    [DbContext(typeof(TestContext))]
    [Migration("20240804151608_GenderAdded")]
    partial class GenderAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestBD3.Model.Gender", b =>
                {
                    b.Property<int>("genderId")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("genderId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            genderId = 0,
                            name = "Male"
                        },
                        new
                        {
                            genderId = 1,
                            name = "Female"
                        });
                });

            modelBuilder.Entity("TestBD3.Model.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("MessageContent")
                        .HasColumnType("text")
                        .HasColumnName("message");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("messages_pk");

                    b.HasIndex("UserId");

                    b.ToTable("messegers", (string)null);
                });

            modelBuilder.Entity("TestBD3.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("GenderId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("user_pk");

                    b.HasIndex("GenderId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("TestBD3.Model.Message", b =>
                {
                    b.HasOne("TestBD3.Model.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("messages_user_id_pk");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestBD3.Model.User", b =>
                {
                    b.HasOne("TestBD3.Model.Gender", "Gender")
                        .WithMany("users")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("TestBD3.Model.Gender", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("TestBD3.Model.User", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
